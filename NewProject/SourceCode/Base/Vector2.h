//=================================================================================
//
//    Vector2 header
//    Author : Lin He                                作成日 : 2018/09/18
//
//=================================================================================

#ifndef _VECTOR2_H_
#define _VECTOR2_H_

#include "DirectX9.h"

//=================================================================
// [ 2D外積（抽象）関数 ]
//
// [ Parameters ]
// [const D3DXVECTOR2]	v1 	: 2dベクター1
// [const D3DXVECTOR2]	v2	: 2dベクター2
//
// [ Rerurn ]
// float : ベクター1とベクター2の外積
//=================================================================
float Vec2Cross(const D3DXVECTOR2 v1, const D3DXVECTOR2 v2);

//=================================================================
// [ 2D内積関数 ]
//
// [ Parameters ]
// [const D3DXVECTOR2]	v1 	: 2dベクター1
// [const D3DXVECTOR2]	v2	: 2dベクター2
//
// [ Rerurn ]
// float : 2dベクター1と2dベクター2の内積
//=================================================================
float Vec2Dot(const D3DXVECTOR2 v1, const D3DXVECTOR2 v2);

//=================================================================
// [ 2Dベクター大きさ関数 ]
//
// [ Parameters ]
// [const D3DXVECTOR2]	v 	: 2dベクター
//
// [ Rerurn ]
// float : 2dベクターの大きさ
//=================================================================
float Vec2Magnitude(const D3DXVECTOR2 v);

//=================================================================
// [ 2Dベクター大きさ関数 ]
//
// [ Parameters ]
// [const float]	v_one_way 	: 2d単方向ベクター
//
// [ Rerurn ]
// float : もしv_one_wayがマイナスだったらその反数を返す
//=================================================================
float Vec2Magnitude(const float v_one_way);

//=================================================================
// [ 点が四角形の中にあるかをチェックする関数 ]
//=================================================================
bool IsInRectangle(const D3DXVECTOR2 pos, const float left, const float right, const float up, const float down);
#endif